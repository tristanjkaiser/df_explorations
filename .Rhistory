df <-
# Add columns from Reports
df <- data.frame(matrix(0, nrow = 100, ncol = 10))
df
names(df) <- c("Letter", "A", "B", "C", "D", "E")
df
test <- sample(letters[1:4], k, TRUE)
test <- sample(letters[1:4], 10, TRUE)
df$Letter <- sample(letters[1:5], 100, TRUE)
View(df)
# Add columns from Reports
df <- data.frame(matrix(0, nrow = 100, ncol = 6))
names(df) <- c("Letter", "A", "B", "C", "D", "E")
df$Letter <- sample(letters[1:5], 100, TRUE)
# Add columns from Reports
df <- data.frame(matrix(0, nrow = 100, ncol = 6))
names(df) <- c("Letter", "A", "B", "C", "D", "E")
df$Letter <- sample(letters[1:5], TRUE)
e
for(i in seq_along(df$Letter)){
df[i , df$Letter[[i]]] <- 1
}
df <- data.frame(matrix(0, nrow = 100, ncol = 6))
names(df) <- c("Letter", "a", "b", "c", "d", "e")
df$Letter <- sample(letters[1:5], 100, TRUE)
for(i in seq_along(df$Letter)){
df[i, df$Letter[[i]]] <- 1
}
df <- data.frame(matrix(0, nrow = 100, ncol = 6))
names(df) <- c("letter", "a", "b", "c", "d", "e")
df$letter <- sample(letters[1:5], 100, TRUE)
# This works to apply a 1 in the appropriate column given the value of df$letter
for(i in seq_along(df$letter)){
df[i, df$letter[[i]]] <- 1
}
fill_function <- function(df, variable){
df[,variable] <- 1
}
df2 <- apply(df, 1, fill_function(df, df$letter))
df2 <- map(df, 1, fill_function(df, df$letter))
library(tidyverse)
library(lubridate)
library(magrittr)
df2 <- map(df, 1, fill_function(df, df$letter))
df <- data.frame(matrix(0, nrow = 100, ncol = 6))
names(df) <- c("letter", "a", "b", "c", "d", "e")
df$letter <- sample(letters[1:5], 100, TRUE)
# This works to apply a 1 in the appropriate column given the value of df$letter
for(i in seq_along(df$letter)){
df[i, df$letter[[i]]] <- 1
}
#### Function attempt ####
# This doesn't work, but what I'm thinking about
# Append & fill function.
fill_function <- function(df, variable){
df[,variable] <- 1
}
df2 <- dmap(df, 1, fill_function(df, df$letter))
View(df2)
df3 <- lapply(df, fill_function(df, df$letter))
